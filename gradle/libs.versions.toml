[versions]
nav-paw-schema-main = "1.25.03.10.2-1"
nav-paw-schema-bekreftelse = "1.25.03.26.32-1"
nav-common = "3.2025.06.23_14.50-3af3985d8555"
nav-security = "5.0.34"
nav-security-mock-oauth2-server = "3.0.0"
nav-tms-varsel = "2.1.1"
arrow = "2.1.2"
arrow-jackson = "0.15.1"
hoplite = "2.9.0"
graphql = "8.8.1"
kafka = "4.0.0"
confluent-kafka = "8.0.0"
avro = "1.12.0"
jackson = "2.20.1"
exposed = "0.61.0"
logstash = "8.1"
logback = "1.5.19"
kotest = "6.0.3"
mockk = "1.14.6"
testcontainers = "1.21.3"
atlassian-oai = "2.46.0"
micrometer = "1.15.4"
otel-api = "1.54.1"
otel-instrumentation = "2.20.1"
postgres = "42.7.8"
h2-database = "2.4.240"
bigquery = "26.70.0"
flyway = "11.14.0"
hikari = "7.0.2"
kotlinx-coroutines = "1.10.2"
kotlinx-serialization = "1.9.0"
ktor = "3.3.1"

[libraries]
arrow-core-core = { group = "io.arrow-kt", name = "arrow-core", version.ref = "arrow" }
arrow-functions = { group = "io.arrow-kt", name = "arrow-functions", version.ref = "arrow" }
arrow-integration-jackson = { group = "io.arrow-kt", name = "arrow-integrations-jackson-module", version.ref = "arrow-jackson" }
logbackClassic = { group = "ch.qos.logback", name = "logback-classic", version.ref = "logback" }
logstashLogbackEncoder = { group = "net.logstash.logback", name = "logstash-logback-encoder", version.ref = "logstash" }
kotlinx-coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
ktor-client-contentNegotiation = { group = "io.ktor", name = "ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-core = { group = "io.ktor", name = "ktor-client-core", version.ref = "ktor" }
ktor-client-cio = { group = "io.ktor", name = "ktor-client-cio", version.ref = "ktor" }
ktor-client-mock = { group = "io.ktor", name = "ktor-client-mock", version.ref = "ktor" }
ktor-client-logging = { group = "io.ktor", name = "ktor-client-logging", version.ref = "ktor" }
ktor-client-okhttp = { group = "io.ktor", name = "ktor-client-okhttp", version.ref = "ktor" }
ktor-server-cors = { group = "io.ktor", name = "ktor-server-cors", version.ref = "ktor" }
ktor-server-swagger = { group = "io.ktor", name = "ktor-server-swagger", version.ref = "ktor" }
ktor-server-callId = { group = "io.ktor", name = "ktor-server-call-id", version.ref = "ktor" }
ktor-server-callLogging = { group = "io.ktor", name = "ktor-server-call-logging", version.ref = "ktor" }
ktor-server-statusPages = { group = "io.ktor", name = "ktor-server-status-pages", version.ref = "ktor" }
ktor-server-contentNegotiation = { group = "io.ktor", name = "ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-coreJvm = { group = "io.ktor", name = "ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-core = { group = "io.ktor", name = "ktor-server-core", version.ref = "ktor" }
ktor-server-openapi = { group = "io.ktor", name = "ktor-server-openapi", version.ref = "ktor" }
ktor-server-netty = { group = "io.ktor", name = "ktor-server-netty", version.ref = "ktor" }
ktor-server-auth = { group = "io.ktor", name = "ktor-server-auth", version.ref = "ktor" }
ktor-server-metricsMicrometer = { group = "io.ktor", name = "ktor-server-metrics-micrometer", version.ref = "ktor" }
ktor-serialization-jvm = { group = "io.ktor", name = "ktor-serialization-jvm", version.ref = "ktor" }
ktor-serialization-jackson = { group = "io.ktor", name = "ktor-serialization-jackson", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { group = "io.ktor", name = "ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-server-test-host = { group = "io.ktor", name = "ktor-server-test-host", version.ref = "ktor" }

opentelemetry-api = { group = "io.opentelemetry", name = "opentelemetry-api", version.ref = "otel-api" }
opentelemetry-annotations = { group = "io.opentelemetry.instrumentation", name = "opentelemetry-instrumentation-annotations", version.ref = "otel-instrumentation" }
opentelemetry-sdk = { group = "io.opentelemetry", name = "opentelemetry-sdk", version.ref = "otel-api" }
micrometer-registryPrometheus = { group = "io.micrometer", name = "micrometer-registry-prometheus", version.ref = "micrometer" }
kafka-clients = { group = "org.apache.kafka", name = "kafka-clients", version.ref = "kafka" }
kafka-streams-core = { group = "org.apache.kafka", name = "kafka-streams", version.ref = "kafka" }
kafka-streams-test = { group = "org.apache.kafka", name = "kafka-streams-test-utils", version.ref = "kafka" }
avro-core = { group = "org.apache.avro", name = "avro", version.ref = "avro" }
avro-kafkaSerializer = { group = "io.confluent", name = "kafka-avro-serializer", version.ref = "confluent-kafka" }
avro-kafkaStreamsSerde = { group = "io.confluent", name = "kafka-streams-avro-serde", version.ref = "confluent-kafka" }
jackson-datatypeJsr310 = { group = "com.fasterxml.jackson.datatype", name = "jackson-datatype-jsr310", version.ref = "jackson" }
jackson-dataformat-csv = { group = "com.fasterxml.jackson.dataformat", name = "jackson-dataformat-csv", version.ref = "jackson" }
jackson-kotlin = { group = "com.fasterxml.jackson.module", name = "jackson-module-kotlin", version.ref = "jackson" }
jackson-core = { group = "com.fasterxml.jackson.core", name = "jackson-core", version.ref = "jackson" }
graphql-ktor-client = { group = "com.expediagroup", name = "graphql-kotlin-ktor-client", version.ref = "graphql" }
hoplite-core = { group = "com.sksamuel.hoplite", name = "hoplite-core", version.ref = "hoplite" }
hoplite-toml = { group = "com.sksamuel.hoplite", name = "hoplite-toml", version.ref = "hoplite" }
hoplite-yaml = { group = "com.sksamuel.hoplite", name = "hoplite-yaml", version.ref = "hoplite" }
exposed-core = { group = "org.jetbrains.exposed", name = "exposed-core", version.ref = "exposed" }
exposed-json = { group = "org.jetbrains.exposed", name = "exposed-json", version.ref = "exposed" }
exposed-dao = { group = "org.jetbrains.exposed", name = "exposed-dao", version.ref = "exposed" }
exposed-jdbc = { group = "org.jetbrains.exposed", name = "exposed-jdbc", version.ref = "exposed" }
exposed-javaTime = { group = "org.jetbrains.exposed", name = "exposed-java-time", version.ref = "exposed" }
test-junit5-runner = { group = "io.kotest", name = "kotest-runner-junit5", version.ref = "kotest" }
test-kotest-assertionsCore = { group = "io.kotest", name = "kotest-assertions-core", version.ref = "kotest" }
test-mockk-core = { group = "io.mockk", name = "mockk", version.ref = "mockk" }
test-testContainers-core = { group = "org.testcontainers", name = "testcontainers", version.ref = "testcontainers" }
test-testContainers-postgresql = { group = "org.testcontainers", name = "postgresql", version.ref = "testcontainers" }
database-postgres-driver = { group = "org.postgresql", name = "postgresql", version.ref = "postgres" }
database-flyway-core = { group = "org.flywaydb", name = "flyway-core", version.ref = "flyway" }
database-flyway-postgres = { group = "org.flywaydb", name = "flyway-database-postgresql", version.ref = "flyway" }
database-hikari-connectionPool = { group = "com.zaxxer", name = "HikariCP", version.ref = "hikari" }
database-h2 = { group = "com.h2database", name = "h2", version.ref = "h2-database" }
database-bigquery-librariesBom = { group = "com.google.cloud", name = "libraries-bom", version.ref = "bigquery" }
database-bigquery-client = { group = "com.google.cloud", name = "google-cloud-bigquery"}
atlassian-oai-swaggerRequestValidator-core = { group = "com.atlassian.oai", name = "swagger-request-validator-core", version.ref = "atlassian-oai" }
nav-common-tokenClient = { group = "no.nav.common", name = "token-client", version.ref = "nav-common" }
nav-common-log = { group = "no.nav.common", name = "log", version.ref = "nav-common" }
nav-common-auditLog = { group = "no.nav.common", name = "audit-log", version.ref = "nav-common" }
nav-security-tokenClientCore = { group = "no.nav.security", name = "token-client-core", version.ref = "nav-security" }
nav-security-tokenValidationKtorV3 = { group = "no.nav.security", name = "token-validation-ktor-v3", version.ref = "nav-security" }
nav-security-mockOauth2Server = { group = "no.nav.security", name = "mock-oauth2-server", version.ref = "nav-security-mock-oauth2-server" }
nav-tms-varsel-kotlinBuilder = { group = "no.nav.tms.varsel", name = "kotlin-builder", version.ref = "nav-tms-varsel" }
nav-paw-schema-main = { group = "no.nav.paw.arbeidssokerregisteret.api", name = "main-avro-schema", version.ref = "nav-paw-schema-main" }
nav-paw-schema-bekreftelse-paavegneav = { group = "no.nav.paw.arbeidssokerregisteret.api", name = "bekreftelse-paavegneav-schema", version.ref = "nav-paw-schema-bekreftelse" }
nav-paw-schema-bekreftelsesmelding = { group = "no.nav.paw.arbeidssokerregisteret.api", name = "bekreftelsesmelding-schema", version.ref = "nav-paw-schema-bekreftelse" }

[bundles]
ktor-server-instrumented = ["ktor-server-core", "ktor-server-coreJvm", "ktor-server-netty", "ktor-server-metricsMicrometer"]
unit-testing-kotest = ["test-junit5-runner", "test-kotest-assertionsCore", "test-mockk-core"]
