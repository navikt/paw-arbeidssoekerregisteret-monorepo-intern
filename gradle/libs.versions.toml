[versions]
pawPdlClientVersion = "24.08.08.40-1"
pawAaregClientVersion = "24.07.04.18-1"
arbeidssokerregisteretVersion = "1.9348086045.48-1"
bekreftelseSchemaVersion = "24.09.16.1-1"
arrowVersion = "1.2.4"
noNavCommonVersion = "3.2024.05.23_05.46-2b29fa343e8e"
noNavSecurityVersion = "5.0.5"
comSksamuelHopliteVersion = "2.8.0.RC3"
orgApacheKafkaVersion = "3.7.0"
ioConfluentKafkaVersion = "7.6.0"
orgApacheAvroVersion = "1.11.3"
comFasterxmlJacksonVersion = "2.18.0"
kotlinExposedVersion = "0.51.1"
logstashVersion = "7.4"
logbackVersion = "1.5.8"
kotestVersion = "5.9.1"
mockkVersion = "1.13.11"
testContainersVersion = "1.20.2"
mockOauth2ServerVersion = "2.1.5"
micrometerVersion = "1.13.1"
otelTargetSdkVersion = "1.39.0"
otelInstrumentationVersion = "2.4.0"
otelInstrumentationKtorVersion = "2.8.0-alpha"
coroutinesVersion = "1.9.0"
postgresDriverVersion = "42.7.4"
flywayVersion = "10.15.0"
hikariVersion = "5.1.0"

[libraries]
coroutinesCore = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "coroutinesVersion" }
arrowCore = { group = "io.arrow-kt", name = "arrow-core", version.ref = "arrowVersion" }
logbackClassic = { group = "ch.qos.logback", name = "logback-classic", version.ref = "logbackVersion" }
logstashLogbackEncoder = { group = "net.logstash.logback", name = "logstash-logback-encoder", version.ref = "logstashVersion" }
ktorClientContentNegotiation = { group = "io.ktor", name = "ktor-client-content-negotiation", version = "2.3.12" }
ktorClientCore = { group = "io.ktor", name = "ktor-client-core", version = "2.3.12" }
ktorClientCio = { group = "io.ktor", name = "ktor-client-cio", version = "2.3.12" }
ktorClientMock = { group = "io.ktor", name = "ktor-client-mock", version = "2.3.12" }
ktorClientLogging = { group = "io.ktor", name = "ktor-client-logging", version = "2.3.12" }
ktorClientOkhttp = { group = "io.ktor", name = "ktor-client-okhttp", version = "2.3.12" }
ktorServerCors = { group = "io.ktor", name = "ktor-server-cors", version = "2.3.12" }
ktorServerSwagger = { group = "io.ktor", name = "ktor-server-swagger", version = "2.3.12" }
ktorServerCallId = { group = "io.ktor", name = "ktor-server-call-id", version = "2.3.12" }
ktorServerStatusPages = { group = "io.ktor", name = "ktor-server-status-pages", version = "2.3.12" }
ktorServerContentNegotiation = { group = "io.ktor", name = "ktor-server-content-negotiation", version = "2.3.12" }
ktorServerCoreJvm = { group = "io.ktor", name = "ktor-server-core-jvm", version = "2.3.12" }
ktorServerCore = { group = "io.ktor", name = "ktor-server-core", version = "2.3.12" }
ktorServerOpenapi = { group = "io.ktor", name = "ktor-server-openapi", version = "2.3.12" }
ktorServerNetty = { group = "io.ktor", name = "ktor-server-netty", version = "2.3.12" }
ktorServerAuth = { group = "io.ktor", name = "ktor-server-auth", version = "2.3.12" }
ktorServerMetricsMicrometer = { group = "io.ktor", name = "ktor-server-metrics-micrometer", version = "2.3.12" }
ktorServerTestsJvm = { group = "io.ktor", name = "ktor-server-tests-jvm", version = "2.3.12" }
ktorSerialization = { group = "io.ktor", name = "ktor-serialization", version = "2.3.12" }
ktorSerializationJvm = { group = "io.ktor", name = "ktor-serialization-jvm", version = "2.3.12" }
ktorSerializationJackson = { group = "io.ktor", name = "ktor-serialization-jackson", version = "2.3.12" }
ktorSerializationJson = { group = "io.ktor", name = "ktor-serialization-kotlinx-json", version = "2.3.12" }
opentelemetryApi = { group = "io.opentelemetry", name = "opentelemetry-api", version.ref = "otelTargetSdkVersion" }
opentelemetryKtor = { group = "io.opentelemetry.instrumentation", name = "opentelemetry-ktor-2.0", version.ref = "otelInstrumentationKtorVersion" }
opentelemetryAnnotations = { group = "io.opentelemetry.instrumentation", name = "opentelemetry-instrumentation-annotations", version.ref = "otelInstrumentationVersion" }
micrometerCore = { group = "io.micrometer", name = "micrometer-core", version.ref = "micrometerVersion" }
micrometerRegistryPrometheus = { group = "io.micrometer", name = "micrometer-registry-prometheus", version.ref = "micrometerVersion" }
pawPdlClient = { group = "no.nav.paw", name = "pdl-client", version.ref = "pawPdlClientVersion" }
pawAaregClient = { group = "no.nav.paw", name = "aareg-client", version.ref = "pawAaregClientVersion" }
mainAvroSchema = { group = "no.nav.paw.arbeidssokerregisteret.api", name = "main-avro-schema", version.ref = "arbeidssokerregisteretVersion" }
kafkaClients = { group = "org.apache.kafka", name = "kafka-clients", version.ref = "orgApacheKafkaVersion" }
kafkaStreams = { group = "org.apache.kafka", name = "kafka-streams", version.ref = "orgApacheKafkaVersion" }
streamsTest = { group = "org.apache.kafka", name = "kafka-streams-test-utils", version.ref = "orgApacheKafkaVersion" }
avro = { group = "org.apache.avro", name = "avro", version.ref = "orgApacheAvroVersion" }
kafkaSerializer = { group = "io.confluent", name = "kafka-avro-serializer", version.ref = "ioConfluentKafkaVersion" }
kafkaStreamsAvroSerde = { group = "io.confluent", name = "kafka-streams-avro-serde", version.ref = "ioConfluentKafkaVersion" }
jacksonDatatypeJsr310 = { group = "com.fasterxml.jackson.datatype", name = "jackson-datatype-jsr310", version.ref = "comFasterxmlJacksonVersion" }
jacksonKotlin = { group = "com.fasterxml.jackson.module", name = "jackson-module-kotlin", version.ref = "comFasterxmlJacksonVersion" }
jacksonCore = { group = "com.fasterxml.jackson.core", name = "jackson-core", version.ref = "comFasterxmlJacksonVersion" }
tokenClient = { group = "no.nav.common", name = "token-client", version.ref = "noNavCommonVersion" }
log = { group = "no.nav.common", name = "log", version.ref = "noNavCommonVersion" }
auditLog = { group = "no.nav.common", name = "audit-log", version.ref = "noNavCommonVersion" }
tokenValidationKtorV2 = { group = "no.nav.security", name = "token-validation-ktor-v2", version.ref = "noNavSecurityVersion" }
tokenClientCore = { group = "no.nav.security", name = "token-client-core", version.ref = "noNavSecurityVersion" }
hopliteCore = { group = "com.sksamuel.hoplite", name = "hoplite-core", version.ref = "comSksamuelHopliteVersion" }
hopliteToml = { group = "com.sksamuel.hoplite", name = "hoplite-toml", version.ref = "comSksamuelHopliteVersion" }
hopliteYaml = { group = "com.sksamuel.hoplite", name = "hoplite-yaml", version.ref = "comSksamuelHopliteVersion" }
exposedCore = { group = "org.jetbrains.exposed", name = "exposed-core", version.ref = "kotlinExposedVersion" }
exposedCrypt = { group = "org.jetbrains.exposed", name = "exposed-crypt", version.ref = "kotlinExposedVersion" }
exposedDao = { group = "org.jetbrains.exposed", name = "exposed-dao", version.ref = "kotlinExposedVersion" }
exposedJdbc = { group = "org.jetbrains.exposed", name = "exposed-jdbc", version.ref = "kotlinExposedVersion" }
exposedJavaTime = { group = "org.jetbrains.exposed", name = "exposed-java-time", version.ref = "kotlinExposedVersion" }
runnerJunit5 = { group = "io.kotest", name = "kotest-runner-junit5", version.ref = "kotestVersion" }
assertionsCore = { group = "io.kotest", name = "kotest-assertions-core", version.ref = "kotestVersion" }
mockk = { group = "io.mockk", name = "mockk", version.ref = "mockkVersion" }
testContainers = { group = "org.testcontainers", name = "testcontainers", version.ref = "testContainersVersion" }
postgresql = { group = "org.testcontainers", name = "postgresql", version.ref = "testContainersVersion" }
mockOauth2Server = { group = "no.nav.security", name = "mock-oauth2-server", version.ref = "mockOauth2ServerVersion" }
postgresDriver = { group = "org.postgresql", name = "postgresql", version.ref = "postgresDriverVersion" }
flywayCore = { group = "org.flywaydb", name = "flyway-core", version.ref = "flywayVersion" }
flywayPostgres = { group = "org.flywaydb", name = "flyway-database-postgresql", version.ref = "flywayVersion" }
hikariConnectionPool = { group = "com.zaxxer", name = "HikariCP", version.ref = "hikariVersion" }
tilgangClient = { group = "no.nav.poao-tilgang", name = "client", version = "2024.04.29_13.59-a0ddddd36ac9" }
bekreftelsesansvarSchema = { group = "no.nav.paw.arbeidssokerregisteret.api", name = "bekreftelsesansvar-schema", version.ref = "bekreftelseSchemaVersion" }
bekreftelsesmeldingSchema = { group = "no.nav.paw.arbeidssokerregisteret.api", name = "bekreftelsesmelding-schema", version.ref = "bekreftelseSchemaVersion" }

[bundles]
ktorServerWithNettyAndMicrometer = ["ktorServerCore", "ktorServerCoreJvm", "ktorServerNetty", "ktorServerMetricsMicrometer"]
testLibsWithUnitTesting = ["runnerJunit5", "assertionsCore", "mockk"]
