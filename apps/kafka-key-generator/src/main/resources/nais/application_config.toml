[pawPeriodeConsumer]
version = "${KAFKA_CONSUMER_GROUP_ID_VERSION_PAW_PERIODER}"
topic = "${KAFKA_TOPIC_PAW_PERIODER}"
groupIdPrefix = "${KAFKA_CONSUMER_GROUP_ID_PREFIX_PAW_PERIODER}"

[pdlAktorConsumer]
version = "${KAFKA_CONSUMER_GROUP_ID_VERSION_PDL_AKTOR}"
topic = "${KAFKA_TOPIC_PDL_AKTOR}"
groupIdPrefix = "${KAFKA_CONSUMER_GROUP_ID_PREFIX_PDL_AKTOR}"

[pawIdentitetProducer]
version = "${KAFKA_PRODUCER_CLIENT_ID_VERSION_PAW_IDENTITETER}"
topic = "${KAFKA_TOPIC_PAW_IDENTITETER}"
clientIdPrefix = "${KAFKA_PRODUCER_CLIENT_ID_PREFIX_PAW_IDENTITETER}"

[pawHendelseloggProducer]
version = "${KAFKA_PRODUCER_CLIENT_ID_VERSION_PAW_HENDELSESLOGG}"
topic = "${KAFKA_TOPIC_PAW_HENDELSESLOGG}"
clientIdPrefix = "${KAFKA_PRODUCER_CLIENT_ID_PREFIX_PAW_HENDELSESLOGG}"

[identitetMergeKonfliktJob]
enabled = "${SCHEDULED_JOB_ENABLED_IDENTITET_MERGE_KONFLIKT}"
delay = "PT10M"
interval = "PT25M"
batchSize = 1000

[identitetSplittKonfliktJob]
enabled = "${SCHEDULED_JOB_ENABLED_IDENTITET_SPLITT_KONFLIKT}"
delay = "PT5M"
interval = "PT32M"
batchSize = 1000